/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package JSplash;


import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Arrays;
import java.util.Locale;
import javax.swing.*;
import javax.tools.Diagnostic;
import javax.tools.DiagnosticCollector;
import javax.tools.JavaCompiler;
import javax.tools.JavaFileObject;
import javax.tools.StandardJavaFileManager;
import javax.tools.ToolProvider;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import com.jtattoo.plaf.AbstractLookAndFeel;

/**
 *
 * @author lenovo
 */
public class JavaIDE extends javax.swing.JFrame {
 public static int i;
 public  static JScrollPane scroll[]=new JScrollPane[10];
  public static JTextArea textarea[]=new JTextArea[10];
 public static String content;
 public Runtime rt;
  public InputStream is;
  public OutputStream os;
  public static Process proc;
  public static javax.swing.tree.DefaultMutableTreeNode treenode = new javax.swing.tree.DefaultMutableTreeNode("Project Explorer");
 public static javax.swing.tree.DefaultMutableTreeNode node[]=new javax.swing.tree.DefaultMutableTreeNode[10];
 
 public static javax.swing.tree.DefaultMutableTreeNode filenode[]=new javax.swing.tree.DefaultMutableTreeNode[10];
  public static Process p;
  public static String filename;
  public static int flag;


    /**
     * Creates new form JavaIDE
     */
    public JavaIDE() {
        initComponents();
        seticon();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        toolbar = new javax.swing.JToolBar();
        new_file = new javax.swing.JButton();
        new_project = new javax.swing.JButton();
        savethis = new javax.swing.JButton();
        save_as = new javax.swing.JButton();
        compiles = new javax.swing.JButton();
        runs = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        pane = new javax.swing.JTabbedPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        welcome = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        programs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jLabel2 = new javax.swing.JLabel();
        tree = new javax.swing.JScrollPane();
        trees = new javax.swing.JTree();
        menubar = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        newproject = new javax.swing.JMenuItem();
        newfile = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        openfile = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        save = new javax.swing.JMenuItem();
        saveas = new javax.swing.JMenuItem();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        close = new javax.swing.JMenuItem();
        closeall = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        jSeparator6 = new javax.swing.JPopupMenu.Separator();
        trash = new javax.swing.JMenu();
        trashfile = new javax.swing.JMenuItem();
        compile = new javax.swing.JMenu();
        undo2 = new javax.swing.JMenuItem();
        jSeparator7 = new javax.swing.JPopupMenu.Separator();
        undo3 = new javax.swing.JMenuItem();
        undo5 = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        undo1 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JSplash");
        setBackground(new java.awt.Color(153, 153, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(150, 100));

        toolbar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        toolbar.setFloatable(false);
        toolbar.setRollover(true);

        new_file.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/new_con.gif"))); // NOI18N
        new_file.setToolTipText(" New File");
        new_file.setFocusable(false);
        new_file.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        new_file.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        new_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_fileActionPerformed(evt);
            }
        });
        toolbar.add(new_file);

        new_project.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/java_app.gif"))); // NOI18N
        new_project.setToolTipText("New Project");
        new_project.setFocusable(false);
        new_project.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        new_project.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        new_project.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_projectActionPerformed(evt);
            }
        });
        toolbar.add(new_project);

        savethis.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/save_edit.gif"))); // NOI18N
        savethis.setToolTipText("Save");
        savethis.setFocusable(false);
        savethis.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        savethis.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        savethis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savethisActionPerformed(evt);
            }
        });
        toolbar.add(savethis);

        save_as.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/saveas_edit.gif"))); // NOI18N
        save_as.setToolTipText("Save As");
        save_as.setFocusable(false);
        save_as.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        save_as.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        save_as.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_asActionPerformed(evt);
            }
        });
        toolbar.add(save_as);

        compiles.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/classes.gif"))); // NOI18N
        compiles.setToolTipText("Compile");
        compiles.setFocusable(false);
        compiles.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        compiles.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        compiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compilesActionPerformed(evt);
            }
        });
        toolbar.add(compiles);

        runs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/lrun_obj.gif"))); // NOI18N
        runs.setToolTipText("Run");
        runs.setFocusable(false);
        runs.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        runs.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        runs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runsActionPerformed(evt);
            }
        });
        toolbar.add(runs);

        jLabel1.setBackground(new java.awt.Color(204, 204, 255));
        jLabel1.setText("     JavaIDE Application");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        welcome.setEditable(false);
        welcome.setColumns(20);
        welcome.setRows(5);
        welcome.setText("The JSplash is developed to compile and run the java programs using user friendly interface\nto provide various functionalities.\nFor more information, refer to the JSplash Java-IDE Application docs from the Help option in the \nmenubar.\n");
        welcome.setAutoscrolls(false);
        welcome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane4.setViewportView(welcome);

        pane.addTab("Welcome to JavaIDE", jScrollPane4);

        output.setEditable(false);
        output.setColumns(20);
        output.setRows(5);
        jScrollPane3.setViewportView(output);

        pane.addTab("Output", jScrollPane3);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/newwelcomescreen.jpg"))); // NOI18N
        jLabel2.setToolTipText("Welcome to JavaIDE");
        jLabel2.setIconTextGap(1);
        jScrollPane1.setViewportView(jLabel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
        );

        programs.addTab("Startup Page", jPanel1);

        trees.setModel(new javax.swing.tree.DefaultTreeModel(treenode));
        tree.setViewportView(trees);

        file.setText("File");

        newproject.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        newproject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/java_app.gif"))); // NOI18N
        newproject.setText("New Project");
        newproject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newprojectActionPerformed(evt);
            }
        });
        file.add(newproject);

        newfile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        newfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/new_con.gif"))); // NOI18N
        newfile.setText("New File");
        newfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newfileActionPerformed(evt);
            }
        });
        file.add(newfile);
        file.add(jSeparator1);

        openfile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        openfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/targetpublic_obj.gif"))); // NOI18N
        openfile.setText("Open");
        openfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openfileActionPerformed(evt);
            }
        });
        file.add(openfile);
        file.add(jSeparator2);

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        save.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/save_edit.gif"))); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        file.add(save);

        saveas.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        saveas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/saveas_edit.gif"))); // NOI18N
        saveas.setText("Save As");
        saveas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveasActionPerformed(evt);
            }
        });
        file.add(saveas);
        file.add(jSeparator3);

        close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        close.setText("Close");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        file.add(close);

        closeall.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        closeall.setText("Close All");
        closeall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeallActionPerformed(evt);
            }
        });
        file.add(closeall);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        menubar.add(file);

        edit.setText("Edit");
        edit.add(jSeparator6);

        trash.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/trash.gif"))); // NOI18N
        trash.setText("Delete");

        trashfile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.CTRL_MASK));
        trashfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/new_con.gif"))); // NOI18N
        trashfile.setText("Current File");
        trashfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                trashfileActionPerformed(evt);
            }
        });
        trash.add(trashfile);

        edit.add(trash);

        menubar.add(edit);

        compile.setText("Tools");

        undo2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        undo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/classes.gif"))); // NOI18N
        undo2.setText("Compile");
        undo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undo2ActionPerformed(evt);
            }
        });
        compile.add(undo2);
        compile.add(jSeparator7);

        undo3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        undo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/lrun_obj.gif"))); // NOI18N
        undo3.setText("Run");
        undo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undo3ActionPerformed(evt);
            }
        });
        compile.add(undo3);

        undo5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        undo5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/JSplash/classes.gif"))); // NOI18N
        undo5.setText("Send");
        undo5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undo5ActionPerformed(evt);
            }
        });
        compile.add(undo5);

        menubar.add(compile);

        help.setText("Help");

        undo1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        undo1.setText("About");
        undo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undo1ActionPerformed(evt);
            }
        });
        help.add(undo1);

        menubar.add(help);

        setJMenuBar(menubar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tree, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(programs)
                    .addComponent(pane))
                .addGap(10, 10, 10))
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(toolbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toolbar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(tree)
                        .addGap(10, 10, 10))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(programs)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pane, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void new_projectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_projectActionPerformed
        new Newprojectwindow().makeprojectwindow();
    }//GEN-LAST:event_new_projectActionPerformed
public String readFile(String fileName) throws IOException {
  
   
    
        BufferedReader br = new BufferedReader(new FileReader(fileName));
    
    try {
        StringBuilder sb = new StringBuilder();
        String line = br.readLine();

        while (line != null) {
            sb.append(line);
            sb.append("\n");
            line = br.readLine();
        }
        return sb.toString();
    } finally {
        br.close();
    }
    
}

    private void openfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openfileActionPerformed
     JFileChooser fc=new JFileChooser();
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int response=fc.showOpenDialog(this);
        if(response==JFileChooser.OPEN_DIALOG){
             Newfilewindow.file[i]= fc.getSelectedFile();
            
            Newfilewindow.filepath[i]=Newfilewindow.file[i].getParent();
         
             Newfilewindow.filename[i]=Newfilewindow.file[i].getName();
        flag=1;
        }
        int n=Newfilewindow.filename[i].lastIndexOf('.');
        Newfilewindow.filename[i]= Newfilewindow.filename[i].substring(0,n);
       if(Newfilewindow.filepath[i]!=null)
        {
       try{
        content= readFile( Newfilewindow.filepath[i]+"\\"+Newfilewindow.filename[i]+".java");
       }catch(IOException e){}
           
       createtab(Newfilewindow.filename[i]+".java");
       textarea[i-1].setText(content);
      programs.setSelectedIndex(JavaIDE.i);
        }
    }//GEN-LAST:event_openfileActionPerformed

    private void new_fileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_fileActionPerformed
  new Newfilewindow().makefilewindow();
        
                                        
    }//GEN-LAST:event_new_fileActionPerformed

    
    private void newfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newfileActionPerformed
      new Newfilewindow().makefilewindow();
              
    }//GEN-LAST:event_newfileActionPerformed

    

    private void newprojectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newprojectActionPerformed
        new Newprojectwindow().makeprojectwindow();
       

    }//GEN-LAST:event_newprojectActionPerformed

    private void saveasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveasActionPerformed
        int j=programs.getSelectedIndex();
        SaveAs.content=textarea[j-2].getText();
        new SaveAs().makesaveaswindow();
    }//GEN-LAST:event_saveasActionPerformed

    private void save_asActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_asActionPerformed
        int j=programs.getSelectedIndex();
        SaveAs.content=textarea[j-1].getText();
        new SaveAs().makesaveaswindow();
    }//GEN-LAST:event_save_asActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        dispose();
    }//GEN-LAST:event_exitActionPerformed

    private void savethisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savethisActionPerformed
        output.setText(" ");
        String program;
        int j=programs.getSelectedIndex();
          program=textarea[j-1].getText();
             try {
                FileWriter fw = new FileWriter(Newfilewindow.file[j-1]);
                fw.write(program);
                fw.close();
           } catch (IOException e) {}

    
    }//GEN-LAST:event_savethisActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        output.setText(" ");       
        int j=programs.getSelectedIndex();
          String program=textarea[j-1].getText();
             try {
                FileWriter fw = new FileWriter(Newfilewindow.file[j-2]);
                fw.write(program);
                fw.close();
           } catch (IOException e) {}
            
            
    }//GEN-LAST:event_saveActionPerformed

    private void compilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compilesActionPerformed
     // try{
        String add=null;
        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();
      DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<>();
StandardJavaFileManager fileManager = compiler.getStandardFileManager(diagnostics, null, null);
int j=programs.getSelectedIndex();
   add=Newfilewindow.filepath[j-1]+"\\"+Newfilewindow.filename[j-1]+".java";
Iterable<? extends JavaFileObject> compilationUnits = fileManager.getJavaFileObjectsFromStrings(Arrays.asList(add));
JavaCompiler.CompilationTask task = compiler.getTask(null, fileManager, diagnostics, null,
        null, compilationUnits);
boolean success = task.call();

if(success==true)
    output.setText("No errors");
           else
{

 String errors=" "; 
    for( Diagnostic diagnostic: diagnostics.getDiagnostics()){
    { String sd= ("Error on line:"+" "+ diagnostic.getLineNumber()+" " + diagnostic.getMessage(Locale.ENGLISH));
     
    errors+=sd;
    }
    
    }

    output.setText(errors);
    errors=" ";
}
  
  
    }//GEN-LAST:event_compilesActionPerformed
public void addnode(DefaultMutableTreeNode projectnode)
{
   DefaultTreeModel model=(DefaultTreeModel)trees.getModel();
   DefaultMutableTreeNode root=(DefaultMutableTreeNode)model.getRoot();
   root.add(projectnode);
       }
   
    private void runsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runsActionPerformed
     
        String show=null;
        String add;
       
        try{
            int j=programs.getSelectedIndex();
            show = run(Newfilewindow.filename[j-1]);
         } catch (IOException | InterruptedException ex){}
     this.output.setText(show);
    }//GEN-LAST:event_runsActionPerformed

     public String run(String clazz) throws IOException, InterruptedException {        
       
         ProcessBuilder pb = new ProcessBuilder("java", clazz);
        pb.redirectError();
        int j=programs.getSelectedIndex();
        pb.directory(new File(Newfilewindow.file[j-1].getParent()));
        p = pb.start();
        InputStreamConsumer consumer = new InputStreamConsumer(p.getInputStream());
        consumer.start();

        int result = p.waitFor();

        consumer.join();

        return consumer.getOutput().toString();
    }
     
     public class InputStreamConsumer extends Thread {

        private InputStream is;
        private IOException exp;
        private StringBuilder output;

        public InputStreamConsumer(InputStream is) {
            this.is = is;
        }

        @Override
        public void run() {
            int in = -1;
            output = new StringBuilder(64);
            try {
                while ((in = is.read()) != -1) {
                    output.append((char) in);
                }
            } catch (IOException ex) {
                ex.printStackTrace();
                exp = ex;
            }
        }

        public StringBuilder getOutput() {
            return output;
        }

        public IOException getException() {
            return exp;
        }
    }


     
    private void trashfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_trashfileActionPerformed
       new confirm().makeconfirm();      
       output.setText("");
    }//GEN-LAST:event_trashfileActionPerformed

     
    private void undo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undo1ActionPerformed
String help="                           JSplash Java-IDE User Guide-\n" +
"\n" +

"The JSplash is standalone application/desktop application which is developed to compile" +
    "\n" + "and run the java programs using Graphical User Friendly Interface\n" +
"in order to provide various functionalities.\n" +
"\n" +
"This Java IDE Application supports following features:\n" +
"\n" +
"1.You can create Projects i.e, directories to store your java files.\n" +
"\n" +
"2.You can create Java Files from this application itself.\n" +
"\n" +
"3.You can open pre-existing Java Files.\n" +
"\n" +
"4.You can compile the Java Files.\n" +
"\n" +
"5.You can run the Java Class Files.\n" +
"\n" +
"6.You can stop the execution of Java Class File.\n" +
"\n" +
"7.You can delete the Java File which is in current use.\n" +
"\n" +
"8.You can delete the Project which contains the java file which is in current use.\n" +
"\n" +
"9.The Project Explorer gives ease to handle multiple java files and projects.\n" +
"\n" +
"10.You can send documents,images and videos.\n" +
"\n" +
"11.The Help menu item gives you the required docs of this JavaIDE Applications."
        ;
        
this.welcome.setText(help);
    }//GEN-LAST:event_undo1ActionPerformed

    private void undo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undo2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_undo2ActionPerformed

    private void undo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undo3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_undo3ActionPerformed

    private void undo5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undo5ActionPerformed
        new sendnetwork().setrun();
    }//GEN-LAST:event_undo5ActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        int com=JavaIDE.programs.getSelectedIndex();
        if(com!=0)
        arrange(com);
    }//GEN-LAST:event_closeActionPerformed

    private void closeallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeallActionPerformed
        arrange(111);
    }//GEN-LAST:event_closeallActionPerformed

    
    
    public void mouseClicked(MouseEvent e) {
    int x=e.getX();
    int y=e.getY();
    System.out.println(x+","+y);//these co-ords are relative to the component
}
    
    public static class MyCloseActionHandler implements ActionListener {

    public void actionPerformed(ActionEvent evt) {

        Component selected = programs.getSelectedComponent();
        if (selected != null) {

           programs.remove(selected);
            // It would probably be worthwhile getting the source
            // casting it back to a JButton and removing
            // the action handler reference ;)

        }

    }

}
    
    public static void arrange(int j){
    if(j==111)
    { int m=i;
    while(m>0)
         {
            programs.remove(m);
          m--;
                }
      i=0;
    }
    else{
    programs.remove(j);
    int n=j-1;
    for(int k=n;k<i;k++)
    {
    textarea[n]=textarea[n+1];
    Newfilewindow.file[n]=Newfilewindow.file[n+1];
    Newfilewindow.filename[n]=Newfilewindow.filename[n+1];
    Newfilewindow.filepath[n]=Newfilewindow.filepath[n+1];
    }
    i--;
    }
      }
    
    static void createtab(String text) {
    JLabel label = new JLabel(text);
        textarea[i]=new JTextArea();
        scroll[i]=new JScrollPane();
         textarea[i]=new JTextArea();
        scroll[i]=new JScrollPane();
         textarea[i].setColumns(20);
         textarea[i].setRows(5);
         textarea[i].setBorder(null);
         textarea[i].setSelectionColor(new java.awt.Color(102,204,255));
         textarea[i].getAutoscrolls();
         Dimension d=new Dimension(2147483647, 2147483647);
         scroll[i].setMaximumSize(d);
        scroll[i].setViewportView(textarea[i]);
        programs.addTab(text, scroll[i]);
        textarea[i].setBorder(null);
        textarea[i].setSize(2147483647, 2147483647);
      programs.setTabComponentAt(programs.getTabCount() - 1, new JLabel(text));
        i++;
    }
    
  public void seticon()
  {
      setIconImage((Toolkit.getDefaultToolkit().getImage(getClass().getResource("logo.png"))));
  }
   
    
    /**
     * @param args the command line arguments
     */
     

    public static void main(String args[]) {
       
 try {
            // select Look and Feel
            UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
        }
        catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        }




        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaIDE().setVisible(true);
                              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem close;
    private javax.swing.JMenuItem closeall;
    private javax.swing.JMenu compile;
    private javax.swing.JButton compiles;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JMenu help;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator6;
    private javax.swing.JPopupMenu.Separator jSeparator7;
    public javax.swing.JMenuBar menubar;
    private javax.swing.JButton new_file;
    private javax.swing.JButton new_project;
    private javax.swing.JMenuItem newfile;
    private javax.swing.JMenuItem newproject;
    private javax.swing.JMenuItem openfile;
    public javax.swing.JTextArea output;
    public javax.swing.JTabbedPane pane;
    public static javax.swing.JTabbedPane programs;
    private javax.swing.JButton runs;
    private javax.swing.JMenuItem save;
    private javax.swing.JButton save_as;
    private javax.swing.JMenuItem saveas;
    private javax.swing.JButton savethis;
    public javax.swing.JToolBar toolbar;
    private javax.swing.JMenu trash;
    private javax.swing.JMenuItem trashfile;
    public javax.swing.JScrollPane tree;
    public javax.swing.JTree trees;
    private javax.swing.JMenuItem undo1;
    private javax.swing.JMenuItem undo2;
    private javax.swing.JMenuItem undo3;
    private javax.swing.JMenuItem undo5;
    private javax.swing.JTextArea welcome;
    // End of variables declaration//GEN-END:variables
}
